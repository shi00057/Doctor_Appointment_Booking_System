@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    var area = (string?)ViewContext.RouteData.Values["area"] ?? "";
    var sidebarPartial = area switch
    {
        "Admin" => "_SidebarAdmin",
        "Doctor" => "_SidebarDoctor",
        "Patient" => "_SidebarPatient",
        _ => "_SidebarPatient"
    };
    var pageTitle = (ViewData["Title"] as string) ?? "";
}

<div class="container-fluid py-3">
    <div class="row">
        <aside class="col-12 col-md-3 col-lg-2 mb-3 mb-md-0">
            @await Html.PartialAsync($"~/Views/Shared/{sidebarPartial}.cshtml")
        </aside>

        <main class="col-12 col-md-9 col-lg-10">
            @if (!string.IsNullOrWhiteSpace(pageTitle))
            {
                <div class="d-flex justify-content-between align-items-center border-bottom pb-2 mb-3">
                    <h2 class="h5 mb-0">@pageTitle</h2>
                    <div class="small text-muted">@DateTime.Now.ToString("yyyy-MM-dd")</div>
                </div>
            }

            @RenderBody()

            <div class="mt-4">
                @await Html.PartialAsync("~/Views/Shared/_NotificationsBar.cshtml")
            </div>

            @RenderSection("Scripts", required: false)
            @RenderSection("Styles", required: false)
        </main>
    </div>
</div>

<style>
    .sidebar-sticky {
        position: sticky;
        top: 1rem;
    }
</style>
