@model CST8002.Web.Areas.Patient.ViewModels.PatientAppointmentsIndexVm
@using System

@{
    ViewData["Title"] = "My Appointments";

    var fromVal = Model.From ?? DateTime.Today.AddMonths(-1);
    var toVal = Model.To ?? DateTime.Today.AddMonths(1);

    Func<string, string> badge = s =>
    {
        var t = (s ?? "").ToLowerInvariant();
        return t switch
        {
            "booked" => "bg-success",
            "cancelled" => "bg-secondary",
            "completed" => "bg-info",
            _ => "bg-light text-dark"
        };
    };
}

<div class="card mb-3">
    <div class="card-body">
        <form method="get" asp-action="Index" class="row g-2 align-items-end">
            <div class="col-auto">
                <label class="form-label">From</label>
                <input type="date" class="form-control"
                       name="from" value="@fromVal.ToString("yyyy-MM-dd")" />
            </div>
            <div class="col-auto">
                <label class="form-label">To</label>
                <input type="date" class="form-control"
                       name="to" value="@toVal.ToString("yyyy-MM-dd")" />
            </div>
            <div class="col-auto">
                <button type="submit" class="btn btn-primary">Filter</button>
            </div>
            <div class="col-auto">
                <a asp-action="Index" class="btn btn-outline-secondary">Reset</a>
            </div>

            <div class="col-auto ms-auto">
                <a class="btn btn-success"
                   asp-area="Patient" asp-controller="Booking" asp-action="Index">
                    New Appointment
                </a>
            </div>
        </form>
    </div>
</div>

@if (Model.Items == null || !Model.Items.Any())
{
    <div class="alert alert-light border">
        No appointments found for the selected range.
    </div>
}
else
{
    <div class="table-responsive">
        <table class="table table-hover align-middle">
            <thead class="table-light">
                <tr>
                    <th>Appointment #</th>
                    <th>DoctorId</th>
                    <th>Start (UTC)</th>
                    <th>End (UTC)</th>
                    <th>Status</th>
                    <th class="text-end">Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var a in Model.Items)
                {
                    var canCancel =
                    string.Equals(a.Status, "Booked", StringComparison.OrdinalIgnoreCase)
                    && a.StartUtc > DateTime.UtcNow;

                    <tr>
                        <td>@a.ApptId</td>
                        <td>@a.DoctorId</td>
                        <td>@DateTime.SpecifyKind(a.StartUtc, DateTimeKind.Utc).ToString("yyyy-MM-dd HH:mm")</td>
                        <td>@DateTime.SpecifyKind(a.EndUtc, DateTimeKind.Utc).ToString("yyyy-MM-dd HH:mm")</td>
                        <td>
                            <span class="badge @badge(a.Status)">@a.Status</span>
                        </td>
                        <td class="text-end">
                            @if (canCancel)
                            {
                                <form asp-action="Cancel" method="post" class="d-inline">
                                    @Html.AntiForgeryToken()
                                    <input type="hidden" name="apptId" value="@a.ApptId" />
                                    <button type="submit" class="btn btn-sm btn-outline-danger"
                                            onclick="return confirm('Cancel this appointment?');">
                                        Cancel
                                    </button>
                                </form>
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}
